//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using Domain.Common;

namespace Domain.School {
    using System;
    using System.Collections.Generic;

    public partial class Class : IEntity, ITrackable {
        public Class() {
            Students = new HashSet<Student>();
            Subjects = new HashSet<Subject>();
            Activities = new HashSet<Activity>();
            TeacherClassSubjectMaps = new HashSet<TeacherClassSubjectMap>();
            Exams = new HashSet<Exam>();
            Attendances = new HashSet<Attendance>();
        }

        public int Id { get; set; }
        [MaxLength]
        public string Label { get; set; }
        public DateTime CreatedDate { get; set; }
        public DateTime? ModifiedDate { get; set; }
        public DateTime? DeletedDate { get; set; }
        public string Term1Path { get; set; }
        public string Term2Path { get; set; }
        public string Orientation { get; set; }
        [ForeignKey("SectionLabel")]
        public int SectionLabel_Id { get; set; }
        public virtual SectionLabel SectionLabel { get; set; }
        [ForeignKey("ClassLabel")]
        public int ClassLabel_Id { get; set; }
        public virtual ClassLabel ClassLabel { get; set; }

        public virtual ICollection<Student> Students { get; set; }
        public virtual ICollection<Subject> Subjects { get; set; }
        public virtual ICollection<Activity> Activities { get; set; }

        
        public virtual ClassTeacher ClassTeacher { get; set; }

        public virtual ICollection<TeacherClassSubjectMap> TeacherClassSubjectMaps { get; set; }
        public virtual ICollection<Exam> Exams { get; set; }
        public virtual ICollection<Attendance> Attendances { get; set; }

        /// <summary>
        /// students who is not deleted and order by roll no.
        /// </summary>
        public IEnumerable<Student> ValidStudents(int academicYearId) {
            return Students.Where(x => x.DeletedDate == null && x.AcademicYear_Id == academicYearId).ToList().OrderBy(x => x.RollNo);
        }
    }
}
